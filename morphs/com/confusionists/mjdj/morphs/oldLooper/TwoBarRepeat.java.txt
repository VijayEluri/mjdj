package com.confusionists.mjdj.morphs.oldLooper;

import java.util.List;

import javax.sound.midi.ShortMessage;

import com.confusionists.mjdj.api.DeviceNotFoundException;
import com.confusionists.mjdj.api.MessageWrapper;
import com.confusionists.mjdj.api.MidiTimerTask;
import com.confusionists.mjdj.api.Morph;
import com.confusionists.mjdj.api.SwitchableTimerTask;

public abstract class TwoBarRepeat extends Morph {

	String deviceName = null;
	boolean dataSwitch2 = false;
	boolean dataSwitch1 = false;

	public String getName() {
		return "Two-Bar Repeat 0.1a";
	}

	public boolean process(MessageWrapper message, String from) throws Exception {
		// we'll have to keep track of these so that you can release one and it
		// keeps going
		ShortMessage sMessage = message.getShortMessage();
		if (sMessage == null) return false;
		if (message.filterControlCommand(0, 126)) {
			dataSwitch1 = (sMessage.getData2() > 64);
			setPlayTimedTasks();
			return true;
		} else if (message.filterControlCommand(9, 64)) {
			dataSwitch2 = (sMessage.getData2() > 64);
			setPlayTimedTasks();
			return true;
		}
		if (playTimedTasks)
			return false;
		if (sMessage.getCommand() != ShortMessage.NOTE_ON)
			return false;
		if (sMessage.getData2() == 0)
			return false;
		MidiTimerTask task = new SwitchableTimerTask();
		task.init(service, message, this, deviceName);
		service.schedule(task, 8);
		return false;
	}

	private void setPlayTimedTasks() {
		playTimedTasks = (dataSwitch1 || dataSwitch2);
	}

	public void init(List<String> deviceNames) throws DeviceNotFoundException {
		for (String name : deviceNames) {
			if (name.indexOf("IAC") != -1 && name.indexOf("1 OUT") != -1) {
				deviceName = name;
				service.log(getName() + " will send to " + deviceName);
			}
		}

	}

	public int getMatchGroup() {
		return MATCHES_COMMAND + MATCHES_CHANNEL + MATCHES_CC_NUMBER
				+ MATCHES_DEVICE;
	}

}

